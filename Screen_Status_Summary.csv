"Screen Name";"Interface (User/ProducerX)";"Current Status (%)";"Issues / Gaps";"Linked Backend/API";"UI/UX Review Needed?";"Expected Outcome"
"LanguageSelectionScreen";"First Launch (All)";"90%";"Minor: Ensure preference persistence if user registers immediately after.";"`SharedPreferences` (Local), Optional: `PUT /api/users/preferences`";"No";"Seamless language selection and robust persistence for user session/profile."
"LandingPage";"Unauthenticated";"40%";"**Functional (✅):** Producer Search (`/api/unified/search`), Direct Producer Login (`/api/auth/login-with-id`).
**Needs Improvement (⚠️):** UI guidance for producer claim vs. recover flow. Clearer visual distinction between user/producer paths. Frontend route for `/recover` exists but needs UI for claim submission.
**To Implement (❌):** Full backend logic for producer profile claiming (`/api/auth/claim-producer-profile` including justification verification, account linking, admin review process). UI for justification submission on `/recover` (file upload, text). Dynamic content display (trending Choices/Interests).";"`GET /api/unified/search` (functional), `POST /api/auth/login-with-id` (functional), Needs: `POST /api/auth/claim-producer-profile` (new backend logic, file handling, verification state machine for claims), Backend review process for claims.";"Yes";"Clear, distinct onboarding paths for users & producers. Seamless producer profile claiming process with justification. Engaging first impression with dynamic content."
"LoginUserPage";"User";"90%";"Standard login. Add 'remember me' option? Link to producer login/claim?";"`POST /api/auth/login`";"No";"Secure, reliable user login with standard options."
"RegisterUserPage";"User";"85%";"Standard registration. Add social signup options? Profile completion prompts?";"`POST /api/auth/register` or `POST /api/newuser/register`";"No";"Simple, secure user account creation, potentially with social options."
"RegisterRestaurantProducerPage";"Producer (Restaurant)";"60%";"Robust validation needed (incl. duplicate checks). Needs clear link to claiming existing profile first. UI for detailed initial setup (menu structure?).";"`POST /api/auth/register-producer` (type: RestaurantProducer) or `POST /api/producers/register`. Needs check against existing producers.";"Yes";"Comprehensive, validated registration *after* checking for existing claimable profiles. Guidance for initial profile setup."
"RegisterLeisureProducerPage";"Producer (Leisure)";"60%";"Robust validation needed. Link to claiming existing profile first. UI for initial event/activity type setup?";"`POST /api/auth/register-producer` (type: LeisureProducer) or `POST /api/leisure-producers/register`. Needs check against existing producers.";"Yes";"Comprehensive, validated registration *after* checking for existing claimable profiles. Guidance for initial profile setup."
"RegisterWellnessProducerPage";"Producer (Wellness)";"60%";"Robust validation needed. Link to claiming existing profile first. Needs UI to define initial `criteria_ratings` upon registration.";"`POST /api/auth/register-producer` (type: WellnessProducer) or `POST /api/wellness/register`. Needs check against existing producers. Needs handling for initial criteria.";"Yes";"Comprehensive, validated registration *after* checking for existing claimable profiles, including mandatory initial rating criteria setup."
"RecoverProducerPage";"Producer";"30%";"**Core Gap**: Implementation of profile **claiming** logic. Needs UI for proof upload (securely). Backend needs verification workflow (manual admin or automated). Clear UI distinction between password recovery and profile claiming needed.";"Needs: `POST /api/auth/claim-producer-profile` (backend logic, file handling, verification state machine). Existing `/recover-producer` likely only handles password reset.";"Yes";"Secure, verifiable, and distinct processes for 1) claiming existing profiles (with proof) and 2) recovering access to already managed accounts."
"ResetPasswordScreen";"User/Producer";"85%";"Standard password reset. Needs UI clarity if initiated from producer claim failure.";"`POST /api/auth/reset-password/{token}`";"No";"Secure password reset functionality for registered emails."
"FeedScreen";"User, Guest";"15%";"**Functional (✅):** Basic post interaction (e.g., like/comment on standard posts - needs verification for `/api/interactions`).
**Needs Improvement (⚠️):** Performance. Media display (view large, all formats). Profile links from all feed items. Robustness of Like/Comment functionality, ensuring it extends to Choices & Interests, including liking comments.
**To Implement (❌):** Core Feed Algorithm (blending friend Choices as Posts, social context for Interests e.g., 'Marie is interested...', producer posts, AI recommendations). Distinct visual treatment for User vs. Producer posts. Full interaction suite for Choices & Interests (Like, Comment, Share). 'Add to Interests' button on producer posts/profiles linking to specific entities. Content filtering UI and backend logic. Display of aggregated Choice ratings within feed items. Interest Group sharing/filtering. Backend: New Feed API (`/api/feed/{userId}` for complex blending, filters). Extend Interaction API (`POST /api/interactions`) for all actions on all content types. Robust media handling (CDN/API). `POST /api/interests` for contextual interest expression.";"Needs: New Feed API (`/api/feed/{userId}` supporting complex blending, group filters, Choice/Interest integration). Extended Interaction API (`POST /api/interactions`) for all actions on all content types. `POST /api/interests` (for contextual interest). Robust media handling CDN/API. `GET /api/choices/user/{userId}/network`, `GET /api/interests/user/{userId}/network`.";"Yes";"Instagram-level Feed: Performant, personalized algorithm blending network Choices/Interests (with social cues & group filtering), producer posts & AI recs. Full interaction suite (like posts/comments, view profiles). Express Interest contextually. Superb media experience."
"MapRestaurantScreen";"User, Guest";"35%";"Needs consistent UI structure with other maps. Comprehensive filtering (cuisine, price, rating, friend Choices/Interests). Harmonized marker/popup design. Correct deep-linking to ProducerScreen. Performance.";"Needs: Enhanced map endpoint (`/api/producers/map-choices-interests` supporting filters). `POST /api/interests` integration.";"Yes";"Unified Map UI: Consistent, powerful map exploration for restaurants with rich filtering (incl. social signals), beautiful visuals, seamless navigation to profiles."
"MapLeisureScreen";"User, Guest";"35%";"Needs consistent UI structure. Comprehensive filtering (activity type, event category, date, friend Choices/Interests). Harmonized marker/popup design. Correct deep-linking to ProducerLeisureScreen/EventLeisureScreen. Performance.";"Needs: Enhanced map endpoint (`/api/leisure/map-choices-interests` supporting filters). `POST /api/interests` integration.";"Yes";"Unified Map UI: Consistent, powerful map exploration for leisure with rich filtering (incl. social signals), beautiful visuals, seamless navigation to profiles/events."
"MapWellnessScreen";"User, Guest";"35%";"Needs consistent UI structure. Comprehensive filtering (service type, ratings based on criteria, friend Choices/Interests). Harmonized marker/popup design. Correct deep-linking to WellnessProducerScreen. Performance.";"Needs: Enhanced map endpoint (`/api/wellness/map-choices-interests` supporting filters). `POST /api/interests` integration.";"Yes";"Unified Map UI: Consistent, powerful map exploration for wellness with rich filtering (incl. social signals), beautiful visuals, seamless navigation to profiles."
"MapFriendsScreen";"User";"50%";"Accuracy/privacy controls need refinement & clear UI. Needs correct deep-linking to ProfileScreen. Performance/battery impact.";"`GET /api/friends/map-data/{userId}`, `GET /api/users/{userId}/friends`, uses `locationHistory`. Needs robust profile linking.";"Maybe";"Reliable, privacy-centric map display of friends' locations with seamless navigation to their profiles."
"ProducerSearchPage";"User, Guest";"40%";"**Rename?** (e.g., Explore/Discovery). Needs real-time data connection. Expand filters drastically (based on ALL relevant backend model fields + friend Choices/Interests). Improve sorting. Implement direct 'Add Interest' UI/backend link.";"`GET /api/unified/search` (needs major enhancement for real-time, filters, sorting). `POST /api/interests` integration needed.";"Yes";"Renamed Discovery Page: Real-time search/explore with extensive, granular filtering (incl. social) & sorting. Direct 'Add Interest' action."
"CopilotScreen";"User";"5%";"**Functional (✅):** (Likely placeholder UI shell only).
**Needs Improvement (⚠️):** Basic UI shell requires complete overhaul for AI interaction and display of varied structured outputs.
**To Implement (❌):** Core AI development (NLP, recommendation engine using Choices & Interests). Conversational UI for natural language queries. UI for structured AI outputs (recommendation lists, comparisons, map views, user profile suggestions). Display of AI reasoning ('why this suggestion?'). Direct action buttons from AI suggestions (e.g., 'Book Table', 'Add to Calendar', 'Share with Friend') with backend integrations. User feedback mechanism for AI suggestions (UI and `POST /api/ai/copilot/feedback`). Backend: Fully implement `POST /api/ai/copilot` and `GET /api/ai/recommendations` to utilize both Choice and Interest data from respective collections. API for feedback capture.";"Needs: Fully implemented `POST /api/ai/copilot` (handling complex queries, context, user profile retrieval, Choice/Interest data). `GET /api/ai/recommendations/{userId}`. `POST /api/ai/copilot/feedback`. Integration APIs for actions derived from AI suggestions.";"Yes";"Powerful, conversational AI concierge providing truly hyper-personalized recommendations (explaining its reasoning), facilitating discovery, planning, and actions based on deep understanding of user Choices & Interests."
"MyProfileScreen";"User";"50%";"UI/UX improvements needed. **Core Gaps**: Implement Edit/Delete for own Choices & Interests. Implement 'Coups de coeur' (Favorites/Bookmarks) feature: Add/Remove actions (Producers, Events, Posts, Items?) + Display section. Clear indication this is **logged-in user's** management area.";"Standard profile APIs + Needs: `DELETE /api/choices/{id}`, `PUT /api/choices/{id}` (if editable), `DELETE /api/interests/{id}`, `PUT /api/interests/{id}`. Needs Favorite/Bookmark API (`POST/DELETE /api/bookmarks`). Needs APIs to fetch own Choices/Interests/Bookmarks.";"Yes";"Polished, functional **logged-in user profile**: Manage own Choices/Interests/Posts. Curate & view Favorites ('Coups de coeur'). Robust settings."
"ProfileScreen";"User, Guest";"45%";"Needs display of target user's *public* Choices/Interests (respecting privacy). Follow/Friend request logic needs state handling (pending, etc.). Clear visual distinction from MyProfileScreen.";"`GET /api/users/{userId}/public` (needs extension for public Choices/Interests). `POST /api/friends/request`, `POST /api/users/follow` (needs state logic).";"Maybe";"Clear public view of users (respecting privacy), showcasing shareable Choices/Interests. Smooth follow/friending actions with status visibility."
"MessagingScreen";"User, Producer";"25%";"**User Context**: Group chat, @Mentions, Video/Audio calls, Read receipts, Typing indicators, Msg search, Media. **Producer Context**: Same features but for client comms (support, direct offers, appointment F/U), quick replies, canned responses. Common performance/media handling needs.";"Basic APIs exist. Needs: Group chat APIs (`POST /api/conversations/group`), Mention handling, Call initiation, Read receipt/Typing (WebSockets), Msg Search API, Media upload/retrieval. Producer specific: Quick reply/Canned response API.";"Yes";"Instagram DM equivalent for Users. Robust, professional messaging tool for Producers, integrated with their services/offers."
"VideoCallScreen";"User";"25%";"WebRTC implementation needed. Call quality management. Basic UI exists, but needs refinement for reliability. Screen sharing/group calls are future considerations.";"WebSockets (Signaling), `POST /api/calls/initiate`, `/accept`, `/end`. Needs robust WebRTC backend/signaling.";"Yes";"Stable, high-quality 1-to-1 video/audio calls as baseline."
"ChoiceCreationScreen";"User";"30%";"**Functional (✅):** Type selection (restaurant, event, wellness). Location search/selection. Location verification (`POST /api/choices/verify` - backend exists). Basic commentary input. Submission of core Choice data (`POST /api/choices`). Fetching producer menu/criteria (`GET /api/producers/{id}`, `GET /api/wellness/{id}`).
**Needs Improvement (⚠️):** UI for multi-facet rating (especially for consumed items from `structured_data` - robust listing and rating needed). Optional 'Create Post' from Choice flow. Hardening of verification logic and user feedback.
**To Implement (❌):** Photo/video upload, association, and display for Choices. Friend tagging (UI & backend). Privacy settings for Choices (UI & backend). Saving Draft Choices (UI & backend `POST/PUT /api/choices/draft`). AI augmentation of menus (calorie/popularity) for item selection is not implemented.
**Separate Requirement (❌):** A distinct UI/UX flow for **Interest Creation** (pre-experience expression) is needed, linking to `POST /api/interests`.";"Uses `POST /api/choices/verify`, `GET /api/producers/{id}` (restaurant menu), `GET /api/wellness/{id}` (wellness criteria), `POST /api/choices`. Missing: Media API (`POST /api/media/upload`), Tagging API (`POST /api/tags/choice`), Privacy API (`PUT /api/choices/{id}/privacy`), Draft API (`POST /api/choices/draft`, `PUT /api/choices/draft/{id}`). Needs separate `POST /api/interests` flow/UI and associated backend logic if distinct from choices.";"Yes";"Focus on **Choices** (post-experience): Seamless creation with media, tags, privacy, drafts. Needs separate, equally intuitive flow for creating **Interests** (pre-experience)."
"ProducerFeedScreen";"All Producers";"15%";"**Core Gaps**: Algorithm dev (follower interactions, anonymized local competitor signals, trending local Interests, own post performance). Producers CANNOT emit Interests. Full media support, comment interactions, profile links. Robust filtering options.";"`GET /api/producer-feed/{producerId}` (needs major extension). Needs: `GET /api/local-trends?area=X&category=Y`, specific APIs for competitor insights (if feasible). Extended Interaction API.";"Yes";"Highly relevant, actionable feed for Producers: Insights from followers, local trends, (anonymized) competitor context. Full interaction suite. NO Interest creation for producers."
"HeatmapScreen";"All Producers";"10%";"**Core Gaps**: UI for producers to define dynamic discount zones/levels/times. Backend to store & serve these offers. User-side app logic to detect proximity & notify. Display these producer-defined zones on heatmap.";"`POST /api/producers/dynamic-offer`. `GET /api/heatmap/{producerId}` (needs to show producer-defined zones & user activity). Needs User-side `GET /api/live-offers?lat=X&lon=Y`.";"Yes";"Powerful analytical tool AND real-time on-premise engagement via dynamic, producer-defined timed offers reflected on the map."
"ProducerDashboardIaPage";"All Producers";"15%";"**Core Gaps**: AI model dev for optimizing pricing, promo effectiveness, customer feedback analysis, operational suggestions. UI for drill-down, feedback. Needs to be versatile for various producer queries about their business.";"Primary: `POST /api/ai/producer-query`. Supporting: `GET /api/ai/insights/producer/:producerId`, `GET /api/ai/:producerType/:producerId/recommendations`, `GET /api/ai/producer-insights/:producerId` (all from ai.js). `GET /api/stats/producer/{producerId}`.";"Yes";"Truly ""surpuissant"" AI co-pilot for producers: Deep, actionable advice on pricing, promos, operations, customer sentiment, leveraging all relevant data."
"GrowthAndReachScreen";"All Producers";"10%";"**Core Gaps**: Subscription Tier UI/Backend (selection, payment via Stripe/Paypal, feature access control). Define features per tier. Connect to actual engagement data (views, Choice/Interest conversions, promo redemption).";"Needs: `POST /api/subscriptions/subscribe`, `GET /api/subscriptions/status`, `PUT .../change-tier`, Payment Gateway Webhooks. `Subscription.js` model is key. Existing analytics APIs will feed data, filtered by tier.";"Yes";"Functional subscription system unlocking tiered features for growth. Clear ROI via analytics on real engagement and conversion data."
"MyProducerProfileScreen";"RestaurantProducer";"35%";"**Core Gaps**: UI for detailed `structured_data` menu. Stock availability. Special/New item flags. **Timed Promotions**: UI/Backend for offers valid for specific times (e.g., Happy Hour), auto-reflecting on public profile/search. Define Interest-targetable items. Logged-in producer context.";"`GET /api/producers/{producerId}`, `PUT .../update` (needs to support timed overrides). Offer APIs. Menu item availability API. `POST /api/producers/{id}/timed-offer`.";"Yes";"**Logged-in producer:** Easy, comprehensive profile/menu management. Dynamic timed promotions instantly live on public views. Define 'Interest'-able items."
"MyProducerLeisureProfileScreen";"LeisureProducer";"30%";"**Core Gaps**: Producer **event/activity creation**. Calendar UI. Booking/Capacity logic. **Timed Promotions** for events/activities. Define Interest-targetable events. Logged-in producer context.";"`GET /api/leisure-producers/{id}`, `PUT .../update`. Needs: `POST /api/events` (by producer), Calendar UI, Capacity/booking logic, `POST /api/producers/{id}/timed-offer`.";"Yes";"**Logged-in producer:** Full event/activity creation & management. Dynamic timed promotions. Define 'Interest'-able offerings."
"MyWellnessProducerProfileScreen";"WellnessProducer";"35%";"**Core Gaps**: UI/backend for **customizing** `criteria_ratings`. Staff linkage. Booking info. **Timed Promotions** for services/classes. Define Interest-targetable services. Logged-in producer context.";"`GET /api/wellness/{id}`, `PUT .../update`. Needs: Staff linkage, custom criteria API, booking, `POST /api/producers/{id}/timed-offer`.";"Yes";"**Logged-in producer:** Manage custom criteria, services. Dynamic timed promotions. Define 'Interest'-able services."
"ProducerScreen";"User, Guest, Producer";"65%";"Needs clear, visually appealing display of aggregated Choice ratings & snippets of recent Choices/reviews. *Must reflect live timed promotions from MyProducerProfile*.";"`GET /api/producers/{producerId}` (needs to join/provide aggregated Choice data & live promotion data).";"Maybe";"Compelling public restaurant profile, showcasing social proof & *up-to-the-minute* offers."
"ProducerLeisureScreen";"User, Guest, Producer";"65%";"Needs clear display of upcoming Events with 'Add Interest' buttons, aggregated Choice ratings. *Must reflect live timed promotions*.";"`GET /api/leisure-producers/{producerId}`, `GET /api/events/producer/{producerId}` (needs live promo data). `POST /api/interests` integration.";"Maybe";"Compelling public leisure profile, highlighting events & *up-to-the-minute* offers."
"WellnessProducerScreen";"User, Guest, Producer";"65%";"Needs clear display of services, practitioners, aggregated Choice ratings. *Must reflect live timed promotions*.";"`GET /api/wellness/{placeId}` (needs to join/provide aggregated Choice data & live promo data).";"Maybe";"Compelling public wellness profile, showcasing services & *up-to-the-minute* offers."
"EventLeisureScreen";"User, Guest, Producer";"65%";"Needs prominent 'Add Interest' button. Display friends interested? Link to producer. *Must reflect live timed promotions for the event*.";"`GET /api/events/{eventId}` (needs live promo data). `POST /api/interests` integration. `GET /api/interests/event/{eventId}/friends`.";"Maybe";"Engaging event details, encouraging Interest, displaying *up-to-the-minute* offers."
"InterestCalendarSyncScreen";"User";"0%";"**Core Gaps**: UI for calendar authorization (OAuth2). Sync settings UI. Logic to convert Interest to calendar event draft. User confirmation flow.";"Needs: `POST /api/users/calendar/authorize`, `POST /api/users/calendar/create-event`, `GET/PUT /api/users/calendar/settings`.";"Yes";"Seamless optional integration for users to add expressed Interests (events, bookings) to their personal calendars."